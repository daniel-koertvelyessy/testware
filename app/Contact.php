<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Kyslik\ColumnSortable\Sortable;
use Illuminate\Http\Request;

class Contact extends Model
{
    protected $guarded = [];

    use SoftDeletes, Sortable;

    public function firma()
    {
        return $this->BelongsTo(Firma::class);
    }

    public function fullName()
    {
        return $this->con_vorname . ' ' . $this->con_name;
    }


    public function addContact(Request $request)
    {
        $request->validate([
            'con_label'    => 'required|max:20',
            'con_name'     => 'max:100',
            'con_name_2'   => '',
            'con_vorname'  => '',
            'con_position' => '',
            'con_email'    => '',
            'con_telefon'  => '',
            'con_mobil'    => '',
            'con_fax'      => '',
            'con_com_1'    => '',
            'con_com_2'    => '',
            'firma_id'     => '',
            'anrede_id'    => '',
        ]);

        $this->con_label = $request->con_label;
        $this->con_name = $request->con_name;
        $this->con_name_2 = $request->con_name_2;
        $this->con_vorname = $request->con_vorname;
        $this->con_position = $request->con_position;
        $this->con_email = $request->con_email;
        $this->con_telefon = $request->con_telefon;
        $this->con_mobil = $request->con_mobil;
        $this->con_fax = $request->con_fax;
        $this->con_com_1 = $request->con_com_1;
        $this->con_com_2 = $request->con_com_2;
        $this->firma_id = $request->firma_id;
        $this->anrede_id = $request->adresse_id ?? 1;
        $this->save();
        return $this->id;
    }

    public function addFromAPI(array $data)
    {
        if (is_null($data['name'])) return false;
        $this->con_label = $data['label'];
        $this->con_name = $data['name'];
        $this->con_vorname = $data['vorname'];
        $this->con_position = $data['position'];
        $this->con_email = $data['email'];
        $this->con_telefon = $data['phone'];
        $this->con_mobil = $data['mobil'];
        $this->con_fax = $data['fax'];
        /**
         * Assuming contact is female which has a default id of 2
         * Change to 1 if you want a male contact as default
         */
        $this->anrede_id = $data['anrede_id']??2;

        /**
         * Check if a referenced company is given and exists in database.
         * Create one, if not.
         */
        if (isset($data['company'])) {
            $company = Firma::where('fa_name',$data['company'])->first();
            if ($company){
                $firma_id = $company->id;
            } else {
                $firma = new Firma();
                $firma->fa_label =  substr(strtolower(preg_replace('/\s/', '_', 'co_API_' . $firma->id .$data['company'])), 0, 20);
                $firma->fa_name = $data['company'];
                $firma->fa_description = "Generated by API during creation of contact " . $data['label'];
                $firma->save();
                $firma_id = $firma->id;
            }
            $this->firma_id = $firma_id;
        } else {
            $this->firma_id = $data['firma_id'] ?? NULL;
        }

        $this->save();
        return $this->id;
    }


}
